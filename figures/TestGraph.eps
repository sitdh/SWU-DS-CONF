%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 905.000000 423.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.3 (Build 21E230) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 905 423
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 905 423
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Thonburi
%!FontType1-1.0: Thonburi 1.0000.1.0000
14 dict begin
/FontName /Thonburi def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /guillemotleft put
dup 34 /W put
dup 35 /e put
dup 36 /b put
dup 37 /space put
dup 38 /B put
dup 39 /r put
dup 40 /o put
dup 41 /w put
dup 42 /s put
dup 43 /guillemotright put
dup 44 /C put
dup 45 /l put
dup 46 /i put
dup 47 /n put
dup 48 /t put
dup 49 /S put
dup 50 /v put
dup 51 /c put
dup 52 /R put
dup 53 /M put
dup 54 /P put
dup 55 /hyphen put
dup 56 /h put
dup 57 /p put
dup 58 /d put
dup 59 /u put
dup 60 /A put
dup 61 /m put
dup 62 /D put
dup 63 /a put
dup 64 /y put
dup 65 /L put
dup 66 /E put
dup 67 /g put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2560 -1531 1 index div -1463 2 index div 3957 3 index div 3585 5 -1 roll div]cvx def
/sfnts [<




BA000800130006111239BA001700130006111239B9001D0001F441110067001D0077001D0087001D0097001D00A7001D00B7001D00C7001D00D7001D00085D410500E6001D00F6001D00025DB8000C10B900230001F4410500E9002300F9002300025D41110068002300780023008800230098002300A8002300B8002300C8002300D8002300085D303121233E02351133113E023332041215100021222E0127070613141233321211102623220602018EE9060905E94C869E589F010993FECDFEED5A9E7C4908050DCDB9AAE1E69F6FC05D45C57D160645FCA0776B37AEFEA7D7FEC2FE5A3465826554027FEEFECF010E010D013AF385FEF800000000010074FFD9050A059B001F00DFBB00190005000900042B41110066001900760019008600190096001900A6001900B6001900C6001900D6001900085D410500E5001900F5001900025D00B800004558B8000C2F1BB9000C000B3E59B800004558B800062F1BB9000600073E59B900000004F4B8000C10B900160001F4410500E9001600F9001600025D41110068001600780016008800160098001600A8001600B8001600C8001600D8001600085DB8000610B9001C0001F441110067001C0077001C0087001C0097001C00A7001C00B7001C00C7001C00D7001C00085D410500E6001C00F6001C00025D3031013315140E0123200011100021321E011D0123353626232202111012333236350420EA8DE5A1FECBFEB2014E0135A1E58DEA048D94AFEDEDAF948901670D5DBE660188015A0159018765B06C0C0C4C73FEFFFEE3FEE2FEFE734C0000020074FFD9056007E200130020013EB800212FB800002FB900010005F4B8000010B80003D0B8002110B8000CD0B8000C2FBA0004000C0001111239B8000010B80014D0B8000C10B9001A0005F441110066001A0076001A0086001A0096001A00A6001A00B6001A00C6001A00D6001A00085D410500E5001A00F5001A00025DB8000110B80022DC00B800002FB800004558B8000F2F1BB9000F000B3E59B800004558B800022F1BB9000200073E59B800004558B800082F1BB9000800073E59BA000400080000111239BA001300080000111239B8000F10B900170001F4410500E9001700F9001700025D41110068001700780017008800170098001700A8001700B8001700C8001700D8001700085DB8000810B9001D0001F441110067001D0077001D0087001D0097001D00A7001D00B7001D00C7001D00D7001D00085D410500E6001D00F6001D00025D303101331123350E022322240235100021321E0117113402232202111016333236120478E8E84787A9539DFEF794013401135A9D7C4ACDB9AAE1D9AC6FBF5E07E2F81EF387692AAE0159D7013F01A5336582FE3AED0131FEF2FEF4FEC6F487010700000000020074FFD9053A059B0018





00>] def
/CharStrings 36 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/A 3 def
/B 4 def
/C 5 def
/D 6 def
/E 7 def
/L 8 def
/M 9 def
/P 10 def
/R 11 def
/S 12 def
/W 13 def
/a 14 def
/b 15 def
/c 16 def
/d 17 def
/e 18 def
/g 19 def
/h 20 def
/i 21 def
/l 22 def
/m 23 def
/n 24 def
/o 25 def
/p 26 def
/r 27 def
/s 28 def
/t 29 def
/u 30 def
/v 31 def
/w 32 def
/y 33 def
/guillemotleft 34 def
/guillemotright 35 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.000390625 0 0 0.000390625 0 0 ] readonly def
/FontBBox {-1531 -1463 3957 3585} readonly def
/UniqueID 4316044 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2803290573AE82B4E650A7F1EDBD919180C9611EF8E2CB4CB39503D39465EABD1DD5C59F2B699B84FDE4272A7F3747D14E18D77CA5CFA42ED5701E194E5CC67CFB7AD460D6053ED72008A99BA9F43AFBBD81DCADCBC67B93A4326F372B62AB187B311CF6B0E4DA3BFD993DD70B3637A9CA9872299FAC3048D4BF914A31554D461B20027E8790FD58C2F845A434E5A73B07393D42E5B7FFCED81269AC327FEE60A088D82AD451176A5DCD5EAF505C621C22CEAEBB290608CBA87F636520381A2F4B54E78516936C5ECF953A07C371B7BF9D97357C3D9DF5C932337911E18BD2962544F220A491477303600CD6077423D6F9228223E709E67CA1E23F98A7017C76CA4579D7D1428C79E592FD00C7DB5748D51AF17AFC4D7F93F7A3BFDF9F64BBB232BE804DEDBDD5806C9EF0F9289AFCA75E62F0FC0B33BABAEC2512B7A41973221C8218D3D2C516FC7648D4C6526BFF1CC46A7D2C91A57C1F20ED6D8AEFCE1FB28F05F7336A758EC6519CE5F5261EFEC162BEE41264262EFA93F3E0B26844CE16CC4B7AD5802CDAD8E13B870A72023B855D94ECAFEFCC6B83E70610823620E4AB6A24A3789BCB739BAA02471ADF9229446D2E1F43263E0794E4C0249D61C0B0B599908EAEFE9010F760D58E972A73A419446F2DBA4928EB5DBD18033E997C4EC6D503B2DCF51DFBFDB517D059B4F155A976EA08DAA63EAB0F4154F48D08E75CA0953BAEA087D9428E41EF64EEBCC964800CC92A09F82A0BBA316A671F09433B047522608F2
463CE65162EC58BFC5E08BDC1B78ED99575E3C5435F225488A7B29972E469E58CCC028C7CA3009E31D665815FF70A9D1BCCD51AB4577C80656BE3563B940B049657B1F2858B48A136E8F49E7316061F72EA785C48828C8FB697378BFA3B6EBB3DF1DC4E62C55856F1713CAF112F24F2DBF1F72B93DCE05905EBBABADF82D53D22E22E2A13D02DA8FEB658B4EE980483EA77CD8834F71E4DEFC01C00F86BC339050EED5AF89D6DD5B7602643328F5A061F8C85A835DDCC097FDF166BF50D8B34065ACD22DEC768B344799B1F2675F3A1F7048ED32B34977A456CC2806F9E7169FCFFDCAF35C4A23E67BB2993C416CD75672D859E36466120DFEBF24BA60CCC0F4164C42D52BD16B79A5B2044DC2EDBE4CAAB4A393F0BAF77B7D325F5835AE76C2C7195BC0C14151FA7D0C4B6DA375866D6C6AA397F1D4CA585C699004B4728EBAB04EBFF577F6DB316F411AA8BFCA1FEF960B9B6FCF0C70384F2AB7CF9BE0DD6CEF347013B92381C8BFA60BF0BAE41CFA13A2966DB1F6E132004517A2E02D0ECDB0DF68834B332BDCF1AEECD340E0E11D57A1B948FDBA603D5E5EA7EE5F549D47293092CC93717B7CC7522B89070E9A28E13F0FD4CB706DBB8F2803334A249FB178AD2F21D0748280BE727C5098DE5E56FE85B3885EE44C3535D04525C7C82DA78A44C19A91A62EDEF7730AAF8D5A9D49FCB568FB46F5E7D720AAD7055822A1F7BB0C6B6E6D677ECBCD9BD8A0B99708C046F72CAB35CC6792E93F82F74712254AC891BCD79FA2D217394830D9A06E42C6852C0CC3F13B459631F105C9CB98CE0B19094DB3E05D5AEACB8B0BCB7D6060647BF8F0D913F06E575CC4BAC96C542D39DF9F54C3AE89EEA254E0A2252B2444ECA17EB6E71976894ED8C788E4AFB0EF9C6A85E9CF124C2E714EA8B8A25800BCA05FEC7876454DAB98A929B68A5EA027F41539CB2587FAC7A3B0DAFF9E7D0249342084DF8766845D470BF399A57DF6D35967929DF45C9DEC811C55062DAC8575CCF60D5F4E68A856EEC05BDD5BE61EB03A8909EFA554D971D70EE0508E27DF24785A7BEBEC36081CAF657F042BE247310812C3ADB710A29153C1651BB208F45A6BB608F4353ED486C653A5E3748FA8092E30030D514B0C702A6A826D68A7CB85A1E684080A419D370B1C4866BA809AC24BB7E6E4D92B66271FDE709AD30CB92A8C1DF4CCB83A457758E33A9F5C1DD7E114AE164CD7990DD9B4A209C3BDF25B3A1B0BF6DC9E90A58C4D427F5E3897985316BF58A8A062DF7D9660C58FA018E052066351A88AAA79469E3C9A03648B9BF5014DA2A1562117561AE20735F7FC499F07A6CC8583AD00D266F1B8552429116B3743C64E9A72F0EE4AE99239CE660F7FB442AE034E2F74A9BCE36BB51E13B79867F730FC65A46645B2F190A8DAE6DCFF4DDCC87B82562EC42453088ED4A968D6C5
FEBBFBFB70D0EFD61BBD58D4D3171546BCFC2A7DA9D780953055FB6DC51FC62152709C4E45DCFD2CD0A01FA69D31B3F0EDDC5ED00BAB4BC50C3140F02905CC947BA33C36FDDFC80962B408BDF8252F0F0BD32B2D5496960B3B8B68531A00B104DF6D0D5B319A422CF8334C3950379A5751668144456D634B3672EC1CFF2155DE16C71F89B9EEAFA8EEFB07468E3C8FA1FDA47ECB359B4B22455123EAB98EA78D3D7E139AB07DF848D80BB5268753032E8BCDB46420B6FD9B307F55B2B5F5AC59B7C8E6F6C4110F8B392BEBA48C2C908427D5FE223605E8091E4C4F15DBC8133981D18872E87C6D5573E79AE48974DE863809FCA0AA441470A8B4AB3972BCABC3FD7C4B8F314F41BC2C2D0C4891B68EEBF83BEBE98302A8BDB9F77DB2E411E2188CCA4ECFFC6A7220720550FFA47593C0C85DC2F1C868F77BC94335D0BD341CD755C9C9B5A49ADA73159F6722121017537611872876409675C225EB2FA1904D9FC6A4048023D3A194EACE87993EB6C57781967F983AAEECDC5FD8F2B365301160DC9DA32C3F1423A99423DE4D9EED5EB83ADA7BB47FE88693D252E3F63340960098DAF2337BB09EDA1606B4616B76B41B04771A362394714B5CE687A683F0074E24E3A9679E481A3501FD01A772253321EC92F68E4CA81773C58237D5F95A709A813B39F4DEB92A471B635AD351801F074D0FA73BF28CE1E4B84449FA0650770213D7D63ECF75116DCF6DD03E57B744BA8600D36C39B0F3475CFCB46A0490FA6FB2F93B65DCDE327E2D03A47CB89E7EC4C508C3FAE7642803AA1AD8E43E3084249C36AE203C4962A7F5542DA46768A6E87FBBAD00AD770B8CBB84C4F9F49436E03DB29F277109EC8F1F031589774BF613D949CDD2922A83E9527DF4DA6279805F51BABC209D87F5C96177942EE6CE6D245889A1ED3A97EF70C3EFAECB037DDA204D10537558175F1979097BE92D549023D2F5C3419C7C3EB9ECCB5287A51161EBE89075FE3E7CA7950FC7BE553343A28F9CC2E98A0624D1E20C819EA2CC4E806A98139B40A5FAA4932677FCFD12D2A192419F9D5A93057C8DC2934CA769926C3ABF9A677C56B263B79503852F92C3047AA38050C309DC6F603BF009BF415E0435EC41980A4291E41FF9F9C928982D8D9116520C391B0AFAC3B461E8F623BD9B37C14CE911FACE9F74D2756C5568EAA0ACCAF125EAE82A06098B57C4EC67ADB4FEBCA544D674714CF8970F37D0C378B05A70D128896E4149168E7F20B2524E866B521A457D9E9015AD3BA4F3D96BB05E7C8778FEC8DB0E8E5CF7DA636D7D9363F122EFCDB4E7D075041740E52E175A0E7DFFFA5C305786D96E08AAE44220E8B458888F7663C5B42237B5077AE1D5A067DD005F2DDDF2B6530B2EB4E9070DB0E7B572495619836825D29E747645A0A5F82DA85DDD9B460E431EC839410B1BF41A84

EB9D1E0D2B10A8A5CA9BFA91E674C5DABBDC58B5D10AAABA41B414C58CC33FE761C8A82C38FAD474268C4BE6A1FA4358852A59E931634560394289AD5AB3E5EFF0279E31EDAC24EA292FCDC2C91BDD18029ACE95DD56A9A0276E2945926512718CF2C6F53E06DC70A6F1353F18825D4A05E334FEBBFFB7BD3F041411DBE6BA4DC15630C60D2806DA5812DA5BC50006D51FB579ACA6133642FC3F0D5F8C7B8861CA0F40E4907B8A9A030E3865797DCF4D16116E1A8841E18967906818F5307701389E273BEC8D388C0C990F6F17CBE0454F61C7D530AA0491E7FA17364ACDAF575E719883B013DA5459621556F67DA246A6AB56B65FB1A93397CC980C20894EB103C3910461B82909F26517909450B5FDB142C57F80B9D2198E4470577D99AC2BF75CF4C7FD3F6D87AC608C8ADED816246E73B28240E688304959D7F5B23BAA1ECC42703E40852CD70CA84984D98FFC5881B136251036B3881FD0042803A77A0E13A2F1C5F8FD9C12ABC05B1A9825F59E02B84248636AAA1F4CB1B9F1749028D2A723F3D5A28A255B82A24F0CBF080C3277D72EC066EA6CF0D2552E1B857B8F075DEC48018A53FC6FE340F3824E85CFB72603D4E758D00B81AE9F6F6833A0F9491D9C921F3652D304F9BE7AC0DCF0D692D977C60217EADBA8A6E39D0E8D80BA094429483373B65CE5205D321244CFF333B64A6BF6AF2C6BC91FD6D98134BEE3339750BD859A8253FEF30D9833F988AEF4D08AFD770AA78D5D1D42AE7DE871CA0C907E070AD6C684DF4B66A75D798C97570CDA3A5F3793B5A94865A3BAFE013CB442648E44009986C79AAA45D88785BB42D39BAC51FCA7DB770BAABF037AA9C0BAC990604F029DB51504148C7835F05172B8861F30556F00711BE194B37969055EFB03DFC6529D7A1D397295A59ED71EE7FF817FBE077D4045DE70B54986B5D7196C6443839F1DBE9ABCCA9B45DAA4B6C8607B78498CACCDF1EC52377B3826697627EFEACCE5BF184669377BF895AEDD5C996BBB29D4B82818993CEA48ACCD30C835307DDBA934C047C3587E83DB2F5EF022A487AD956DF8F566FFB523B476C7761F8FB374E7449AD90C225322303746121A23C86623EBC52E2E3F9D676AF446A7AF3EEF52431D698990C2CB8BBA013D88B7689868FF3B7E9F9C892C23367BB73212FE2EE92FC6F35C83A8CD207E7743F830B9D8631C670CBDF8A7A879C555B657BB31ADAB537FBA82220450FF6F67DE8B0F03A91116214BBB57CAD3A7470E432C52B2871760D2CD1BFEE3784CD8BA3576DF57300FD48FE4FF1E7393CCD191D48868C93C79730AF98C3294A71CB22E4EA5EF736831C37FA1E288E1EE19303D3EDE64E4B161E55E7C95B006DD8E8E63DE705EFFD58C25A31BF18363783D73E20120F7BF78C48D13091EB0744775B6DB002D3C02C4987AC111D1F9DC13DF668A25D4
4DE767D4F12C72298BA1B47EBA8E47E91F563AF96E949A123DB594BFB7C23AC4C7C7CE783301CB84DB59E675B56A149249CFB723DD750D37D2CF902301CEC6D1BDA8BA55FDAEF57AD11B46F5BB0C249698C49EAF470CFF415C393C65D838CD52DDC46ABAA74C527BBD68934D906F6F2A8E7A82CFDE01A27E6845544AAA51E6D9EDC41762640211776335E44A0B550BE5D76966FE48131F06DF8ED8767B29EE13D44FEA816F8B39074C448EEFF3ABA34D9D0379C32C96D2CD30FAC00A4C62A8F5E2515770BA59FD80722100F35BCF6BC599E364EAB943E591902B44DD127316EDCD97D9696CF7BD0A8119EE367F1683567BF5C5EB6E200F8E2A646792D16511283ABFEF7016E96513270183B3B2E7385C5698A52330C44CA1B7F2BDBB13175FDDF51E97D79F118FAAFACD2F02BE877C5127A8556DC63500DE52FC9CA12A85128835861B716D804EE76805CC4FB278C11C8156324110090EE62325B7733DBA6F5C9377242963ECB2E5F5880EEB66683BD96B466C7E800324CB2FEA5B91DD996DDFC517240FB533615B3A1C72958FE7E3BB7AB62AC53C1EDD199ED3BAE20869850A58BB4BE309E253588DF8DBDAC2300DAFD1B2DEE7BCF2F4135F4B1B0128C1E13E567CC21D7168AA93560D243C500E5F6A3E28C8726EF0E4F19F7154E40874315B13D5FCE371400768AD4AA64AC96F6FFB3B5E2172EA3273F13DC001E2A261BE54E126E8F45838590F2915FC3316FFC7A1240E189FA0BF1820E236027158C56E0F6EAC7CD22545302FF5757250E058818EB1A9E3B60A6AC84EFC5A3D8F5F8D70AAF189C47CF6DA044DF3BB56C6492AA4A8154076CEAE1FEAAEB2494B2A2BDC31192478DDFF04921FCABA7C8A86F39ECCC708AEA527740DEF4086FC3541FD876E1367A00E7AC525D7E07EA512A99F52A8B41ABA04ED04EC28AD7B6F8FBF6FAB23C13CB540C1B0F0E238C4C9F0EF22362705F33CD8007BD7BF8B5540B2A9AD412938B32FA07921B3DE9DB826D07D7A443BEC51CDCBACCBF34B76C21447E9AFF09B12BF465F3FE892223482281CB4C121A95BAFC9EF9ADCE7C380D1B14A0B9686899C82775AA679B90D6030DDED33107442031143F2AB2428C9F74ACCC05D18B3F233579E760412
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/Thonburi cguidfix
/F1.1/Thonburi renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 905 423 rc
0 423 m
905 423 l
905 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1098.0385 1223.0769 m
2003.8846 1223.0769 l
2003.8846 -938.46155 l
-1098.0385 -938.46155 l
h
-1098.0385 1223.0769 m
f
207 305 m
607 305 l
607 11 l
207 11 l
h
207 305 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
356 295 m
756 295 l
756 589 l
356 589 l
h
356 295 m
S
0 i
1 1 1 sc
CM
201.18994 158 m
211.84732 158 l
211.84732 147 l
201.18994 147 l
h
201.18994 158 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
350.18994 442 m
360.84732 442 l
360.84732 453 l
350.18994 453 l
h
350.18994 442 m
S
350.18994 447.5 m
337 447.5 l
S
0 J
0 j
0 i
336.12131 445.37869 m
337.29288 446.55026 337.29288 448.44974 336.12131 449.62131 c
334.94974 450.79288 333.05026 450.79288 331.87869 449.62131 c
330.70709 448.44974 330.70709 446.55026 331.87869 445.37869 c
333.05026 444.20712 334.94974 444.20712 336.12131 445.37869 c
S
1 1 1 sc
CM
11.013699 267 m
125.82375 267 l
125.82375 219 l
11.013699 219 l
h
11.013699 267 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
160.0137 333 m
274.82376 333 l
274.82376 381 l
160.0137 381 l
h
160.0137 333 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
180.35037 350.13156 m
(!"#$%&'\(\)*#'+)[ 5.343750 9.468750 5.757812 6.097656 3.320312 6.363281 3.863281 6.058594 7.804688 5.093750 5.757812 3.863281 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
195.6281 369.79959 m
(,-.#/0)[ 10.425000 3.756250 3.756250 9.212500 9.337500 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
94.013702 223 m
104.67107 223 l
104.67107 212 l
94.013702 212 l
h
94.013702 223 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
243.0137 377 m
253.67108 377 l
253.67108 388 l
243.0137 388 l
h
243.0137 377 m
S
248.34239 388 m
248.34239 402.40723 l
S
0 J
0 j
0 i
254.34239 408.40723 m
254.34239 401.40723 242.34239 401.40723 242.34239 408.40723 c
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
248.34239 410.90723 m
248.34239 446.57535 l
324.10059 447.39313 l
S
0 J
0 j
[] 0 d
0 i
332.1001 447.47949 m
324.10059 447.39313 l
324.13297 444.39331 m
332.1001 447.47949 l
324.06821 450.39297 l
S
1 1 1 sc
CM
278 412.5 m
392.81006 412.5 l
392.81006 364.5 l
278 364.5 l
h
278 412.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
427 187.5 m
541.81006 187.5 l
541.81006 235.5 l
427 235.5 l
h
427 187.5 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
461.61987 204.63156 m
(!1#'2.3#+)[ 5.343750 6.058594 5.757812 3.863281 5.644531 2.347656 5.453125 5.757812 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
468.58316 224.29959 m
(456)[ 9.693750 12.612500 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
445.94904 412.5 m
560.75909 412.5 l
560.75909 364.5 l
445.94904 364.5 l
h
445.94904 412.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
594.94904 187.5 m
709.75909 187.5 l
709.75909 235.5 l
594.94904 235.5 l
h
594.94904 187.5 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
629.56891 204.63156 m
(!1#'2.3#+)[ 5.343750 6.058594 5.757812 3.863281 5.644531 2.347656 5.453125 5.757812 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
625.29779 224.29959 m
(4718\(9)[ 9.693750 6.062500 9.693750 9.337500 9.693750 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
201.18994 245.5 m
211.84732 245.5 l
211.84732 234.5 l
201.18994 234.5 l
h
201.18994 245.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
350.18994 354.5 m
360.84732 354.5 l
360.84732 365.5 l
350.18994 365.5 l
h
350.18994 354.5 m
S
350.18994 360 m
337 360 l
S
0 J
0 j
0 i
336.12131 357.87869 m
337.29288 359.05026 337.29288 360.94974 336.12131 362.12131 c
334.94974 363.29288 333.05026 363.29288 331.87869 362.12131 c
330.70709 360.94974 330.70709 359.05026 331.87869 357.87869 c
333.05026 356.70712 334.94974 356.70712 336.12131 357.87869 c
S
1 1 1 sc
CM
201.18994 69.5 m
211.84732 69.5 l
211.84732 58.5 l
201.18994 58.5 l
h
201.18994 69.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
350.18994 530.5 m
360.84732 530.5 l
360.84732 541.5 l
350.18994 541.5 l
h
350.18994 530.5 m
S
350.18994 536 m
337 536 l
S
0 J
0 j
0 i
336.12131 533.87866 m
337.29288 535.05023 337.29288 536.94977 336.12131 538.12134 c
334.94974 539.29291 333.05026 539.29291 331.87869 538.12134 c
330.70709 536.94977 330.70709 535.05023 331.87869 533.87866 c
333.05026 532.70709 334.94974 532.70709 336.12131 533.87866 c
S
1 1 1 sc
CM
613.89807 412.5 m
728.70813 412.5 l
728.70813 364.5 l
613.89807 364.5 l
h
613.89807 412.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
762.89807 187.5 m
877.70813 187.5 l
877.70813 235.5 l
762.89807 235.5 l
h
762.89807 187.5 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
797.51794 204.63156 m
(!1#'2.3#+)[ 5.343750 6.058594 5.757812 3.863281 5.644531 2.347656 5.453125 5.757812 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
796.05933 224.29959 m
(47,45)[ 9.693750 6.062500 10.425000 9.693750 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
278 264 m
392.81006 264 l
392.81006 216 l
278 216 l
h
278 264 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
427 336 m
541.81006 336 l
541.81006 384 l
427 384 l
h
427 336 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
462.11011 353.13156 m
(!5\(:;-#+)[ 5.343750 7.882812 6.058594 6.019531 5.835938 2.347656 5.757812 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
447.2269 372.79959 m
(456%<;08)[ 9.693750 12.612500 9.337500 5.312500 11.631250 9.337500 7.093750 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
278 176 m
392.81006 176 l
392.81006 128 l
278 128 l
h
278 176 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
427 424 m
541.81006 424 l
541.81006 472 l
427 472 l
h
427 424 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
462.11011 441.13156 m
(!5\(:;-#+)[ 5.343750 7.882812 6.058594 6.019531 5.835938 2.347656 5.757812 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
432.40814 460.79959 m
(5#=$#'%<;08)[ 12.612500 9.212500 14.306250 9.756250 9.212500 6.181250 5.312500 11.631250 9.337500 7.093750 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
445.94904 264 m
560.75909 264 l
560.75909 216 l
445.94904 216 l
h
445.94904 264 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
594.94904 336 m
709.75909 336 l
709.75909 384 l
594.94904 384 l
h
594.94904 336 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
630.05914 353.13156 m
(!5\(:;-#+)[ 5.343750 7.882812 6.058594 6.019531 5.835938 2.347656 5.757812 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
604.03845 372.79959 m
(>.*9-?@%*8\(9)[ 11.212500 3.756250 8.150000 9.631250 3.756250 8.850000 9.150000 5.312500 8.150000 9.337500 9.693750 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
445.94904 176.5 m
560.75909 176.5 l
560.75909 128.5 l
445.94904 128.5 l
h
445.94904 176.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
594.94904 423.5 m
709.75909 423.5 l
709.75909 471.5 l
594.94904 471.5 l
h
594.94904 423.5 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
630.05914 440.63156 m
(!5\(:;-#+)[ 5.343750 7.882812 6.058594 6.019531 5.835938 2.347656 5.757812 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
604.98218 460.29959 m
(A#?:%*;$=.0)[ 9.337500 9.212500 8.850000 9.631250 5.312500 8.150000 9.337500 9.756250 14.306250 3.756250 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
594.94904 359.6088 m
581.98621 359.52045 l
S
0 J
0 j
0 i
581.12201 357.39319 m
582.28558 358.57272 582.27264 360.47217 581.09314 361.63574 c
579.91357 362.79929 578.01416 362.78635 576.85059 361.60681 c
575.68701 360.42728 575.69995 358.52783 576.87952 357.36426 c
578.05902 356.20071 579.9585 356.21365 581.12201 357.39319 c
S
1 J
1 j
0.60000002 i
594.94904 447.5 m
583.53467 447.5 l
S
0 J
0 j
0 i
582.65601 445.37869 m
583.82758 446.55026 583.82758 448.44974 582.65601 449.62131 c
581.48444 450.79288 579.58496 450.79288 578.41339 449.62131 c
577.24182 448.44974 577.24182 446.55026 578.41339 445.37869 c
579.58496 444.20712 581.48444 444.20712 582.65601 445.37869 c
S
1 1 1 sc
CM
380 86 m
390.65738 86 l
390.65738 75 l
380 75 l
h
380 86 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
529 514 m
539.65735 514 l
539.65735 525 l
529 525 l
h
529 514 m
S
539.65735 519.5 m
551.07526 519.5 l
551.07526 360.21506 l
570.48907 359.71768 l
S
0 J
0 j
0 i
576.33344 353.56601 m
569.33575 353.74527 569.64307 365.74133 576.64081 365.56207 c
S
1 1 1 sc
CM
380 69.5 m
390.65738 69.5 l
390.65738 58.5 l
380 58.5 l
h
380 69.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
529 530.5 m
539.65735 530.5 l
539.65735 541.5 l
529 541.5 l
h
529 530.5 m
S
539.65735 536 m
563.44086 536 l
563.44086 448 l
572.03833 447.74854 l
S
0 J
0 j
0 i
577.86035 441.57565 m
570.86334 441.78033 571.21417 453.77521 578.21118 453.57053 c
S
1 1 1 sc
CM
380 53 m
390.65738 53 l
390.65738 42 l
380 42 l
h
380 53 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
529 547 m
539.65735 547 l
539.65735 558 l
529 558 l
h
529 547 m
S
539.65735 552.5 m
731.5 552.5 l
S
0 J
0 j
0 i
737.5 546.5 m
730.5 546.5 730.5 558.5 737.5 558.5 c
S
1 J
1 j
0.60000002 i
427 360 m
413.65738 360 l
S
0 J
0 j
0 i
412.77869 357.87869 m
413.95026 359.05026 413.95026 360.94974 412.77869 362.12131 c
411.60712 363.29288 409.70764 363.29288 408.53607 362.12131 c
407.36447 360.94974 407.36447 359.05026 408.53607 357.87869 c
409.70764 356.70712 411.60712 356.70712 412.77869 357.87869 c
S
1 J
1 j
0.60000002 i
427 448 m
413.65738 448 l
S
0 J
0 j
0 i
412.77869 445.87869 m
413.95026 447.05026 413.95026 448.94974 412.77869 450.12131 c
411.60712 451.29288 409.70764 451.29288 408.53607 450.12131 c
407.36447 448.94974 407.36447 447.05026 408.53607 445.87869 c
409.70764 444.70712 411.60712 444.70712 412.77869 445.87869 c
S
1 J
1 j
0.60000002 i
427 536 m
413.65738 536 l
S
0 J
0 j
0 i
412.77869 533.87866 m
413.95026 535.05023 413.95026 536.94977 412.77869 538.12134 c
411.60712 539.29291 409.70764 539.29291 408.53607 538.12134 c
407.36447 536.94977 407.36447 535.05023 408.53607 533.87866 c
409.70764 532.70709 411.60712 532.70709 412.77869 533.87866 c
S
1 J
1 j
0.60000002 i
360.84732 360 m
402.15738 360 l
S
0 J
0 j
0 i
408.15738 354 m
401.15738 354 401.15738 366 408.15738 366 c
S
1 J
1 j
0.60000002 i
360.84732 447.54831 m
402.15771 447.92291 l
S
0 J
0 j
0 i
408.21188 441.97757 m
401.21219 441.91409 401.10336 453.9136 408.10309 453.97708 c
S
1 J
1 j
0.60000002 i
360.84732 536 m
402.15738 536 l
S
0 J
0 j
0 i
408.15738 530 m
401.15738 530 401.15738 542 408.15738 542 c
S
1 1 1 sc
CM
330.07632 311.15143 m
340.7337 311.15143 l
340.7337 300.15143 l
330.07632 300.15143 l
h
330.07632 311.15143 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
479.07632 288.84857 m
489.7337 288.84857 l
489.7337 299.84857 l
479.07632 299.84857 l
h
479.07632 288.84857 m
S
484.40503 288.84857 m
484.40503 283.59589 l
S
0 J
0 j
0 i
478.40503 277.59589 m
478.40503 284.59589 490.40503 284.59589 490.40503 277.59589 c
S
1 1 1 sc
CM
602 53 m
612.65735 53 l
612.65735 42 l
602 42 l
h
602 53 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
751 547 m
761.65735 547 l
761.65735 558 l
751 558 l
h
751 547 m
S
761.65735 552.5 m
772.55371 552.5 l
S
0 J
0 j
0 i
778.55371 546.5 m
771.55371 546.5 771.55371 558.5 778.55371 558.5 c
S
1 J
1 j
0.60000002 i
751 552.5 m
743 552.5 l
S
0 J
0 j
0 i
742.12134 550.37866 m
743.29291 551.55023 743.29291 553.44977 742.12134 554.62134 c
740.94977 555.79291 739.05023 555.79291 737.87866 554.62134 c
736.70709 553.44977 736.70709 551.55023 737.87866 550.37866 c
739.05023 549.20709 740.94977 549.20709 742.12134 550.37866 c
S
1 1 1 sc
CM
779 257 m
893.81006 257 l
893.81006 209 l
779 209 l
h
779 257 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
928 343 m
1042.8101 343 l
1042.8101 391 l
928 391 l
h
928 343 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
968.66284 360.13156 m
(!<"1+)[ 5.343750 7.269531 9.468750 6.058594 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
970.10504 379.79959 m
(4>1)[ 9.693750 11.212500 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
779 165.75269 m
893.81006 165.75269 l
893.81006 117.75269 l
779 117.75269 l
h
779 165.75269 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
928 434.24731 m
1042.8101 434.24731 l
1042.8101 482.24731 l
928 482.24731 l
h
928 434.24731 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
968.66284 451.37888 m
(!<"1+)[ 5.343750 7.269531 9.468750 6.058594 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
965.18317 471.04691 m
(4#:.*)[ 9.693750 9.212500 9.631250 3.756250 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
779.10712 74.398232 m
893.91718 74.398232 l
893.91718 26.398233 l
779.10712 26.398233 l
h
779.10712 74.398232 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
928.10712 525.60175 m
1042.9172 525.60175 l
1042.9172 573.60175 l
928.10712 573.60175 l
h
928.10712 525.60175 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
968.76996 543.76672 m
(!<"1+)[ 5.343750 7.269531 9.468750 6.058594 0.000000 ] xS
/F1.1[ 15 0 0 -15 0 0]sf
937.91351 562.43475 m
(B-?*0.31#?'38)[ 8.636719 3.521484 8.296875 7.640625 6.650391 3.521484 8.179688 9.087891 8.636719 8.296875 5.794922 8.179688 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
928 367 m
908 367 l
S
0 J
0 j
0 i
907.12134 364.87869 m
908.29291 366.05026 908.29291 367.94974 907.12134 369.12131 c
905.94977 370.29288 904.05023 370.29288 902.87866 369.12131 c
901.70709 367.94974 901.70709 366.05026 902.87866 364.87869 c
904.05023 363.70712 905.94977 363.70712 907.12134 364.87869 c
S
1 J
1 j
0.60000002 i
928 458.24731 m
908 458.24731 l
S
0 J
0 j
0 i
907.12134 456.12601 m
908.29291 457.29758 908.29291 459.19705 907.12134 460.36862 c
905.94977 461.54019 904.05023 461.54019 902.87866 460.36862 c
901.70709 459.19705 901.70709 457.29758 902.87866 456.12601 c
904.05023 454.95441 905.94977 454.95441 907.12134 456.12601 c
S
1 J
1 j
0.60000002 i
928.10712 549.60175 m
908 549.60175 l
S
0 J
0 j
0 i
907.12134 547.48047 m
908.29291 548.65204 908.29291 550.55151 907.12134 551.72308 c
905.94977 552.89465 904.05023 552.89465 902.87866 551.72308 c
901.70709 550.55151 901.70709 548.65204 902.87866 547.48047 c
904.05023 546.3089 905.94977 546.3089 907.12134 547.48047 c
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
781.05371 552.5 m
899.49988 375.23157 l
S
0 J
0 j
[] 0 d
0 i
903.9444 368.5798 m
899.49988 375.23157 l
897.00549 373.56485 m
903.9444 368.5798 l
901.99432 376.89825 l
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
781.05371 552.5 m
897.11963 464.23981 l
S
0 J
0 j
[] 0 d
0 i
903.48761 459.39737 m
897.11963 464.23981 l
895.30371 461.85181 m
903.48761 459.39737 l
898.93555 466.62778 l
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
781.05371 552.5 m
895.10272 549.83319 l
S
0 J
0 j
[] 0 d
0 i
903.10052 549.64618 m
895.10272 549.83319 l
895.03259 546.83398 m
903.10052 549.64618 l
895.17285 552.8324 l
S
1 J
1 j
0.60000002 i
484.43301 299.84857 m
484.47452 307.99664 l
S
0 J
0 j
0 i
482.3577 308.88611 m
483.52328 307.70859 485.42276 307.69891 486.60028 308.8645 c
487.7778 310.03009 487.78748 311.92957 486.62189 313.10709 c
485.45627 314.28461 483.55682 314.29428 482.3793 313.12869 c
481.20178 311.9631 481.19211 310.06363 482.3577 308.88611 c
S
1 J
1 j
0.60000002 i
484.44653 336 m
484.47507 319.49658 l
S
0 J
0 j
0 i
478.48547 313.48621 m
478.47336 320.48621 490.47333 320.50696 490.48544 313.50699 c
S
1 J
1 j
0.60000002 i
484.40503 235.5 m
484.40503 247.68494 l
S
0 J
0 j
0 i
482.28372 248.56361 m
483.45529 247.39204 485.35477 247.39204 486.52634 248.56361 c
487.69791 249.73518 487.69791 251.63467 486.52634 252.80624 c
485.35477 253.97783 483.45529 253.97783 482.28372 252.80624 c
481.11215 251.63467 481.11215 249.73518 482.28372 248.56361 c
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
484.40503 275.09589 m
484.40503 260.58493 l
S
0 J
0 j
[] 0 d
0 i
484.40503 252.58493 m
484.40503 260.58493 l
481.40503 260.58493 m
484.40503 252.58493 l
487.40503 260.58493 l
S
1 1 1 sc
CM
602.03735 158 m
612.69476 158 l
612.69476 147 l
602.03735 147 l
h
602.03735 158 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
751.03735 442 m
761.69476 442 l
761.69476 453 l
751.03735 453 l
h
751.03735 442 m
S
761.69476 447.5 m
774.64587 447.5 l
S
0 J
0 j
0 i
780.64587 441.5 m
773.64587 441.5 773.64587 453.5 780.64587 453.5 c
S
1 J
1 j
0.60000002 i
751.03735 447.5 m
742.72601 447.5 l
S
0 J
0 j
0 i
741.84735 445.37869 m
743.01892 446.55026 743.01892 448.44974 741.84735 449.62131 c
740.67578 450.79288 738.77631 450.79288 737.60474 449.62131 c
736.43311 448.44974 736.43311 446.55026 737.60474 445.37869 c
738.77631 444.20712 740.67578 444.20712 741.84735 445.37869 c
S
1 J
1 j
0.60000002 i
709.75909 447.5 m
731.22601 447.5 l
S
0 J
0 j
0 i
737.22601 441.5 m
730.22601 441.5 730.22601 453.5 737.22601 453.5 c
S
1 1 1 sc
CM
498.02539 309.84909 m
508.68274 309.84909 l
508.68274 298.84909 l
498.02539 298.84909 l
h
498.02539 309.84909 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
647.02539 290.15091 m
657.68274 290.15091 l
657.68274 301.15091 l
647.02539 301.15091 l
h
647.02539 290.15091 m
S
652.35406 290.15091 m
652.35406 284.89822 l
S
0 J
0 j
0 i
646.35406 278.89822 m
646.35406 285.89822 658.35406 285.89822 658.35406 278.89822 c
S
1 J
1 j
0.60000002 i
652.38208 301.15091 m
652.42352 309.29898 l
S
0 J
0 j
0 i
650.3067 310.18845 m
651.47229 309.01093 653.37177 309.00125 654.54932 310.16684 c
655.72681 311.33243 655.73651 313.2319 654.57092 314.40942 c
653.40533 315.58694 651.50586 315.59662 650.32831 314.43103 c
649.15082 313.26544 649.14111 311.36597 650.3067 310.18845 c
S
1 J
1 j
0.60000002 i
652.35406 235.5 m
652.35406 245.63014 l
S
0 J
0 j
0 i
650.23273 246.50882 m
651.4043 245.33725 653.30383 245.33725 654.4754 246.50882 c
655.64697 247.68039 655.64697 249.57988 654.4754 250.75145 c
653.30383 251.92303 651.4043 251.92303 650.23273 250.75145 c
649.06116 249.57988 649.06116 247.68039 650.23273 246.50882 c
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
652.35406 276.39822 m
652.35406 258.53015 l
S
0 J
0 j
[] 0 d
0 i
652.35406 250.53014 m
652.35406 258.53015 l
649.35406 258.53015 m
652.35406 250.53014 l
655.35406 258.53015 l
S
1 J
1 j
0.60000002 i
652.39673 336 m
652.42371 320.79892 l
S
0 J
0 j
0 i
646.43439 314.78827 m
646.42194 321.78827 658.42194 321.80957 658.43439 314.8096 c
S
1 J
1 j
0.60000002 i
820.3031 235.5 m
820.3031 246.31506 l
S
0 J
0 j
0 i
818.18176 247.19376 m
819.35333 246.02217 821.25287 246.02217 822.42444 247.19376 c
823.59601 248.36533 823.59601 250.26482 822.42444 251.43639 c
821.25287 252.60796 819.35333 252.60796 818.18176 251.43639 c
817.01019 250.26482 817.01019 248.36533 818.18176 247.19376 c
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
783.14587 447.5 m
818.49316 447.5 l
820.21271 259.21466 l
S
0 J
0 j
[] 0 d
0 i
820.28577 251.215 m
820.21271 259.21466 l
817.21283 259.18726 m
820.28577 251.215 l
823.21259 259.24207 l
S
1 1 1 sc
CM
278 88 m
392.81006 88 l
392.81006 40 l
278 40 l
h
278 88 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
427 512 m
541.81006 512 l
541.81006 560 l
427 560 l
h
427 512 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 10 0 0 -10 0 0]sf
462.11011 529.13159 m
(!5\(:;-#+)[ 5.343750 7.882812 6.058594 6.019531 5.835938 2.347656 5.757812 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
435.77066 548.79956 m
(>.*9-?@%9?C#)[ 11.212500 3.756250 8.150000 9.631250 3.756250 8.850000 9.150000 5.312500 9.631250 8.850000 9.756250 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
39.013699 223 m
49.671074 223 l
49.671074 212 l
39.013699 212 l
h
39.013699 223 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
188.0137 377 m
198.67108 377 l
198.67108 388 l
188.0137 388 l
h
188.0137 377 m
S
193.34239 388 m
193.34239 402.40723 l
S
0 J
0 j
0 i
199.34239 408.40723 m
199.34239 401.40723 187.34239 401.40723 187.34239 408.40723 c
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
193.34239 410.90723 m
193.34239 536.30139 l
324.10004 536.02124 l
S
0 J
0 j
[] 0 d
0 i
332.10001 536.00409 m
324.10004 536.02124 l
324.0936 533.02124 m
332.10001 536.00409 l
324.10645 539.02118 l
S
1 1 1 sc
CM
119.0137 245.90721 m
129.67108 245.90721 l
129.67108 234.90721 l
119.0137 234.90721 l
h
119.0137 245.90721 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -149 600 cm
268.0137 354.09277 m
278.67108 354.09277 l
278.67108 365.09277 l
268.0137 365.09277 l
h
268.0137 354.09277 m
S
278.67108 359.59277 m
292.37671 359.59277 l
S
0 J
0 j
0 i
298.37671 353.59277 m
291.37671 353.59277 291.37671 365.59277 298.37671 365.59277 c
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
300.87671 359.59277 m
324.10074 359.8783 l
S
0 J
0 j
[] 0 d
0 i
332.10016 359.97665 m
324.10074 359.8783 l
324.13763 356.87854 m
332.10016 359.97665 l
324.06387 362.87808 l
S
/Cs1 SC
0 sc
367 321 m
(47"#$)[ 9.693750 6.062500 15.150000 9.212500 0.000000 ] xS
ep
end
%%Trailer
%%EOF
